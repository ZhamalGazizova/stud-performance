import streamlit as st
import pandas as pd
from azure.ai.textanalytics import TextAnalyticsClient
from azure.core.credentials import AzureKeyCredential

# üîπ Azure API –¥–µ—Ä–µ–∫—Ç–µ—Ä—ñ–Ω –µ–Ω–≥—ñ–∑ (–±“±–ª–∞—Ä–¥—ã Azure-–¥–∞–Ω –∞–ª–∞—Å—ã“£)
AZURE_AI_KEY = "5k96MSu2fN6fBVk8tWz9ijkteXyhaD7GrOWr3AZVM94ce5ZkPLVOJQQJ99BCACYeBjFXJ3w3AAAAACOGy7RA"
AZURE_AI_ENDPOINT = "https://teacherai.openai.azure.com/"

def authenticate_client():
    return TextAnalyticsClient(endpoint=AZURE_AI_ENDPOINT, credential=AzureKeyCredential(AZURE_AI_KEY))

client = authenticate_client()

# üîπ –û“õ—É—à—ã–ª–∞—Ä–¥—ã“£ “Ø–ª–≥–µ—Ä—ñ–º—ñ–Ω —Ç–∞–ª–¥–∞—É
def analyze_performance(data):
    data['–û—Ä—Ç–∞—à–∞ –±–∞–ª–ª'] = data.iloc[:, 1:].mean(axis=1)

    recommendations = []
    for score in data['–û—Ä—Ç–∞—à–∞ –±–∞–ª–ª']:
        if score >= 4.5:
            rec = "–ñ–∞“õ—Å—ã –∂“±–º—ã—Å! –û—Å—ã–ª–∞–π –∂–∞–ª“ì–∞—Å—Ç—ã—Ä!"
        elif score >= 3.5:
            rec = "“ö–æ—Å—ã–º—à–∞ —Ç”ô–∂—ñ—Ä–∏–±–µ “õ–∞–∂–µ—Ç."
        else:
            rec = "–û–π—ã–Ω —ç–ª–µ–º–µ–Ω—Ç—Ç–µ—Ä—ñ–º–µ–Ω –æ“õ—ã—Ç—É “±—Å—ã–Ω—ã–ª–∞–¥—ã."
        recommendations.append(rec)

    data['“∞—Å—ã–Ω—ã—Å—Ç–∞—Ä'] = recommendations
    return data

# üîπ Streamlit –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ
st.title("üìö –ú“±“ì–∞–ª—ñ–º–≥–µ –∞—Ä–Ω–∞–ª“ì–∞–Ω –≤–∏—Ä—Ç—É–∞–ª–¥—ã –∫”©–º–µ–∫—à—ñ")
st.write("–û“õ—É—à—ã–ª–∞—Ä–¥—ã“£ –±–∞“ì–∞–ª–∞—Ä—ã –±–∞—Ä CSV —Ñ–∞–π–ª—ã–Ω –∂“Ø–∫—Ç–µ“£—ñ–∑")

uploaded_file = st.file_uploader("CSV —Ñ–∞–π–ª—ã–Ω —Ç–∞“£–¥–∞“£—ã–∑", type="csv")

if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)
    result = analyze_performance(df)
    st.write("üîç “Æ–ª–≥–µ—Ä—ñ–º–¥—ñ —Ç–∞–ª–¥–∞—É –Ω”ô—Ç–∏–∂–µ—Å—ñ:")
    st.dataframe(result)

    st.download_button("“∞—Å—ã–Ω—ã—Å—Ç–∞—Ä–¥—ã –∂“Ø–∫—Ç–µ—É", result.to_csv(index=False).encode('utf-8'), "recommendations.csv", "text/csv")
